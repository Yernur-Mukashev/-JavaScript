// Задание 1 (тайминг 30 минут)
// Вы разрабатываете прототип веб-приложения для чтения новостей. Статьи "хранятся" во внутреннем массиве
// (имитируя базу данных). Когда пользователь нажимает на кнопку "Загрузить новости", ваш код должен
// имитировать задержку, словно происходит реальная загрузка данных из внешнего источника, а после этой
// задержки — отображать новости на странице.
// 1. Создайте базовую HTML-структуру с кнопкой для загрузки новостей и контейнером для их отображения.
// 2. Реализуйте функцию fetchNews(), возвращающую промис. Эта функция должна имитировать
// задержку в 2 секунды перед успешным возвращением данных из "виртуальной" базы данных. Для
// добавления интереса: с вероятностью 10% она должна возвращать ошибку вместо данных.
// 3. При нажатии на кнопку "Загрузить новости" вызывайте функцию fetchNews(), обрабатывая успешное
// выполнение и ошибки с использованием then() и catch().
// 4. При успешной загрузке отобразите статьи на странице. При ошибке покажите сообщение об ошибке.
// 5. Добавьте функционал, который отключает кнопку загрузки на время "загрузки" новостей и активирует
// её снова после завершения операции (будь то успешная загрузка или ошибка).


// Виртуальная база данных новостей
const newsDatabase = [
    { title: 'Новость 1', content: 'Содержание новости 1...' },
    { title: 'Новость 2', content: 'Содержание новости 2...' },
    { title: 'Новость 3', content: 'Содержание новости 3...' },
];

// Функция для имитации загрузки новостей
function fetchNews() {
    return new Promise((resolve, reject) => {
        setTimeout(() => {
            // С вероятностью 10% возвращаем ошибку
            if (Math.random() < 0.1) {
                reject('Ошибка при загрузке новостей. Попробуйте снова.');
            } else {
                resolve(newsDatabase);
            }
        }, 2000); // Задержка 2 секунды
    });
}


// Обработчик кнопки "Загрузить новости"
document.querySelector('.load-news-btn').addEventListener('click', () => {
    // const loadNewsBtn = document.querySelector('.load-news-btn');
    const newsContainer = document.querySelector('.news-container');

    // Очищаем контейнер и выводим сообщение о загрузке
    newsContainer.innerHTML = '<p>Загрузка новостей...</p>';
    
    // Отключаем кнопку во время загрузки
    // loadNewsBtn.disabled = true;

    fetchNews()
        .then(news => {
            // Очистка контейнера и отображение новостей
            newsContainer.innerHTML = '';
            news.forEach(article => {
                const newsItem = document.createElement('div');
                newsItem.innerHTML = `<h2>${article.title}</h2><p>${article.content}</p>`;
                newsContainer.appendChild(newsItem);
            });
        })
        .catch(error => {
            // Вывод сообщения об ошибке
            newsContainer.innerHTML = `<p class="error">${error}</p>`;
        })
});
