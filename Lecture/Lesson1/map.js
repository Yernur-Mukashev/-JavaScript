// Map ‚Äî —ç—Ç–æ –∫–æ–ª–ª–µ–∫—Ü–∏—è –∫–ª—é—á/–∑–Ω–∞—á–µ–Ω–∏–µ, –∫–∞–∫ –∏ Object. –ù–æ –æ—Å–Ω–æ–≤–Ω–æ–µ –æ—Ç–ª–∏—á–∏–µ –≤ —Ç–æ–º, —á—Ç–æMap –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–ª—é—á–∏ –ª—é–±–æ–≥–æ —Ç–∏–ø–∞.

// let map = new Map(); // —Å–æ–∑–¥–∞–ª–∏ –∫–æ–ª–µ–∫—Ü–∏—é

// map.set("1", "str1"); //—Å—Ç—Ä–æ–∫–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–ª—é—á–∞
// map.set(1, "num1"); //—Ü–∏—Ñ—Ä–∞ –∫–∞–∫  –∫–ª—é—á–∞
// map.set(true, "bool1"); //–±—É–ª–µ–≤–æ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞–∫ –∫–ª—é—á
// console.log(map);

// // –ø–æ–º–Ω–∏—Ç–µ, –æ–±—ã—á–Ω—ã–π –æ–±—ä–µ–∫—Ç Object –ø—Ä–∏–≤–æ–¥–∏—Ç –∫–ª—é—á–∏ –∫ —Å—Ç—Ä–æ–∫–∞–º
// // –ú–∞—Ä —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–∏–ø –∫–ª—é—á–µ–π, —Ç–∞–∫ —á—Ç–æ –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å—Å—è 2 —Ä–∞–∑–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏—è:
// console.log(map.get(1)); // 'num1'
// console.log(map.get("1")); // 'str1'
// console.log(map.size); // 3

////----- get set ---------

// let map = new Map();
// map.set("1", "We").set(1, "likes").set(true, "JS");

// console.log(map);

// –ü–µ—Ä–µ–±–æ—Ä –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –ú–∞—Ä

// let recipeMap = new Map([
// 	["–æ–≥—É—Ä–µ—Ü", 500],
// 	["–ø–æ–º–∏–¥–æ—Ä", 350],
// 	["–ª—É–∫", 50],
// ]);

// console.log(recipeMap);

// // –ø–µ—Ä–µ–±–æ—Ä –ø–æ –∫–ª—é—á–∞–º (–æ–≤–æ—â–∏)
// for (let vegetable of recipeMap.keys()) {
// 	console.log(vegetable);
// }

// // –ø–µ—Ä–µ–±–æ—Ä –ø–æ –∑–Ω–∞—á–µ–Ω–∏—è–º (—á–∏—Å–ª–æ)
// for (let amount of recipeMap.values()) {
// 	console.log(amount);
// }

// // –ø–µ—Ä–µ–±–æ—Ä –ø–æ —ç–ª–µ–º–µ–Ω—Ç–∞–º –≤ —Ñ–æ—Ä–º–∞—Ç–µ [–∫–ª—é—á, –∑–Ω–∞—á–µ–Ω–∏–µ]
// for (let entry of recipeMap) {
// 	// —Ç–æ –∂–µ —Å–∞–º–æ–µ, —á—Ç–æ –∏ recipeMap.entries()
// 	console.log(entry);
// }

// // –≤—ã–ø–æ–ª–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∫–∞–∂–¥–æ–π –ø–∞—Ä—ã (–∫–ª—é—á, –∑–Ω–∞—á–µ–Ω–∏–µ)
// recipeMap.forEach((value, key, map) => {
// 	console.log(`${key}: ${value}`);
// });

///---------–†–∞–±–æ—Ç–∞ —Å –æ–±—ä–µ–∫—Ç–∞–º–∏-------

// //Object.entries –ø–æ–º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å –ú–∞—Ä:
// let map = new Map(Object.entries(obj));
// //Object.fromEntries –ø–æ–º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å –æ–±—ä–µ–∫—Ç –∏–∑ –ú–∞—Ä
// let obj = Object.fromEntries(map);

// --------------- Set ------------------
let buddies = [
    '–ñ—É—á–∫–∞',
    '–¢—É–∑–∏–∫',
    '–ë—É–ª—å–∫–∞',
    '–¢—É–∑–∏–∫',
    '–ë–æ–±–∏–∫',
    '–ñ—É—á–∫–∞',
    '–í–∞–ª–µ—Ä–∞',
    '–ñ—É—á–∫–∞',
    '–¢—É–∑–∏–∫',
    '–ú–∞–Ω—å–∫–∞'
];

let uniqueBuddies = new Set(buddies);
console.log(uniqueBuddies); // Set(6)¬†{'–ñ—É—á–∫–∞', '–¢—É–∑–∏–∫', '–ë—É–ª—å–∫–∞', '–ë–æ–±–∏–∫', '–í–∞–ª–µ—Ä–∞',¬†‚Ä¶} —É–±—Ä–∞–ª–∏ –¥—É–±–ª–∏–∫–∞—Ç—ã

let arr = Array.from(uniqueBuddies);
console.log(arr); // (6)¬†['–ñ—É—á–∫–∞', '–¢—É–∑–∏–∫', '–ë—É–ª—å–∫–∞', '–ë–æ–±–∏–∫', '–í–∞–ª–µ—Ä–∞', '–ú–∞–Ω—å–∫–∞'] —Å–¥–µ–ª–∞–ª–∏ –º–∞—Å—Å–∏–≤

// new Map() ‚Äì —Å–æ–∑–¥–∞—ë—Ç –∫–æ–ª–ª–µ–∫—Ü–∏—é.
// üí° map.set(key, value) ‚Äì –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –ø–æ –∫–ª—é—á—É key –∑–Ω–∞—á–µ–Ω–∏–µ value.
// üí° map.get(key) ‚Äì –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ –∫–ª—é—á—É –∏–ª–∏ undefined, –µ—Å–ª–∏ –∫–ª—é—á key –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.
// üí° map.has(key) ‚Äì –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ –∫–ª—é—á key –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏, –∏–Ω–∞—á–µ false.
// üí° map.delete(key) ‚Äì —É–¥–∞–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç (–ø–∞—Ä—É ¬´–∫–ª—é—á/–∑–Ω–∞—á–µ–Ω–∏–µ¬ª) –ø–æ –∫–ª—é—á—É key.
// üí° map.clear() ‚Äì –æ—á–∏—â–∞–µ—Ç –∫–æ–ª–ª–µ–∫—Ü–∏—é –æ—Ç –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤.
// üí° map.size ‚Äì –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤.

// new Set(iterable) ‚Äì —Å–æ–∑–¥–∞—ë—Ç Set, –∏ –µ—Å–ª–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –±—ã–ª –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–π –æ–±—ä–µ–∫—Ç
// (–æ–±—ã—á–Ω–æ —ç—Ç–æ –º–∞—Å—Å–∏–≤), —Ç–æ –∫–æ–ø–∏—Ä—É–µ—Ç –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –Ω–æ–≤—ã–π Set
// üí° set.add(value) ‚Äì –¥–æ–±–∞–≤–ª—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ (–µ—Å–ª–∏ –æ–Ω–æ —É–∂–µ –µ—Å—Ç—å, —Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç), –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ—Ç –∂–µ
// –æ–±—ä–µ–∫—Ç set
// üí° set.delete(value) ‚Äì —É–¥–∞–ª—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ value –±—ã–ª–æ –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–µ –Ω–∞ –º–æ–º–µ–Ω—Ç
// –≤—ã–∑–æ–≤–∞, –∏–Ω–∞—á–µ false.
// üí° set.has(value) ‚Äì –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–µ, –∏–Ω–∞—á–µ false
// üí° set.clear() ‚Äì —É–¥–∞–ª—è–µ—Ç –≤—Å–µ –∏–º–µ—é—â–∏–µ—Å—è –∑–Ω–∞—á–µ–Ω–∏—è
// üí° set.size ‚Äì –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–µ

// üí° keys() ‚Äì –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–π –æ–±—ä–µ–∫—Ç –ø–æ –∫–ª—é—á–∞–º,
// üí° values() ‚Äì –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–π –æ–±—ä–µ–∫—Ç –ø–æ –∑–Ω–∞—á–µ–Ω–∏—è–º,
// üí° entries() ‚Äì –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–π –æ–±—ä–µ–∫—Ç –ø–æ –ø–∞—Ä–∞–º –≤–∏–¥–∞ [–∫–ª—é—á, –∑–Ω–∞—á–µ–Ω–∏–µ],
// —ç—Ç–æ—Ç –≤–∞—Ä–∏–∞–Ω—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤ for(..of..).
// üí° forEach() ‚Äì –∏—Ç–µ—Ä–∞—Ç–æ—Ä, —Ä–∞–±–æ—Ç–∞—é—â–∏–π —Ç–∞–∫ –∂–µ, –∫–∞–∫ –∏ —Å –º–∞—Å—Å–∏–≤–æ–º